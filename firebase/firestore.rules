rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Courses collection rules
    match /courses/{courseId} {
      // Allow read access to all authenticated users
      allow read: if isAuthenticated();
      
      // Allow write access only to admin users
      allow create, update, delete: if isAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      // Allow users to read their own data
      allow read: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow admin to read all user data
      allow read: if isAdmin();
      
      // Allow users to update their own data
      allow update: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow admin to update any user data
      allow update: if isAdmin();
    }

    // Announcements collection rules
    match /announcements/{announcementId} {
      // Allow read access to all authenticated users
      allow read: if isAuthenticated();
      
      // Allow write access only to admin users
      allow create, update, delete: if isAdmin();
    }

    // Schedules collection rules
    match /schedules/{scheduleId} {
      // Allow read access to all authenticated users
      allow read: if isAuthenticated();
      
      // Allow write access only to admin users
      allow create, update, delete: if isAdmin();
    }
    
    // Timetables collection rules
    match /timetables/{document=**} {
      // Allow read access to all authenticated users
      allow read: if isAuthenticated();
      
      // Allow write access only to admin users
      allow create, update, delete: if isAdmin();
    }
  }
} 
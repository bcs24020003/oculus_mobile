Firebase Security Rules Update Guide
=================================

To solve the "Error deleting user: [FirebaseError: Missing or insufficient permissions.]" error, 
you need to update the Firebase Firestore security rules. Follow these steps:

1. Login to Firebase Console
   - Visit https://console.firebase.google.com/
   - Login with your Google account
   - Select the "uts-oculus" project

2. Access Firestore Database
   - Click on "Firestore Database" in the left menu

3. Click the "Rules" tab
   - This will display the current security rules

4. Replace the existing rules with the following
   ```
   rules_version = '2';

   service cloud.firestore {
     match /databases/{database}/documents {
       // Helper function: Check if user is an admin
       function isAdmin() {
         return request.auth != null && 
           exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
       }

       // Helper function: Check if user is authenticated
       function isAuthenticated() {
         return request.auth != null;
       }

       // Users collection rules
       match /users/{userId} {
         // Users can read their own data
         allow read: if isAuthenticated() && request.auth.uid == userId;
         
         // Admins can read and delete all user data
         allow read, delete: if isAdmin();
         
         // Users can update their own data
         allow update: if isAuthenticated() && request.auth.uid == userId;
         
         // Admins can update any user data
         allow update: if isAdmin();
         
         // Allow creating users (any authenticated user)
         allow create: if isAuthenticated();
       }

       // Students collection rules
       match /students/{studentId} {
         // Students can read their own data
         allow read: if isAuthenticated() && request.auth.uid == studentId;
         
         // Admins can read and delete all student data
         allow read, delete: if isAdmin();
         
         // Students can update their own data
         allow update: if isAuthenticated() && request.auth.uid == studentId;
         
         // Admins can update any student data
         allow update: if isAdmin();
         
         // Allow creating student records (any authenticated user)
         allow create: if isAuthenticated();
       }

       // Courses collection rules
       match /courses/{courseId} {
         // Allow all authenticated users to read
         allow read: if isAuthenticated();
         
         // Only admins can write
         allow create, update, delete: if isAdmin();
       }

       // Announcements collection rules
       match /announcements/{announcementId} {
         // Allow all authenticated users to read
         allow read: if isAuthenticated();
         
         // Only admins can write
         allow create, update, delete: if isAdmin();
       }

       // Schedules and Timetables collection rules
       match /schedules/{scheduleId} {
         allow read: if isAuthenticated();
         allow create, update, delete: if isAdmin();
       }
       
       match /timetables/{document=**} {
         allow read: if isAuthenticated();
         allow create, update, delete: if isAdmin();
       }
     }
   }
   ```

5. Click the "Publish" button
   - Wait for the rules to be deployed

6. Verify the rules update
   - Try to delete a user again

Key changes explained:

1. **Improved admin check function**:
   - Verifies that the user is authenticated
   - Confirms that the admin record exists
   - Checks if the role field value is 'admin'

2. **Added delete permissions**:
   - Explicitly allows admins to delete documents in users and students collections
   - Uses `allow read, delete: if isAdmin();` to grant delete permissions

3. **Separated Auth and Firestore operations**:
   - The application code separates Firestore and Authentication operations
   - Only performs Firestore document deletion, does not attempt to delete Auth users

Notes:
- These rules only allow admins to delete user documents in Firestore
- Deleting accounts from Firebase Authentication requires additional admin privileges, typically implemented through Firebase Admin SDK or backend services 
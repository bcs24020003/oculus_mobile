rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) ? 
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' : 
          false);
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Student collection is fully public (please improve this rule for better security)
    match /students/{document=**} {
      allow read: if true;
      allow write: if isSignedIn();
      allow delete: if isAdmin();
    }

    // Admins have full access
    match /{document=**} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    match /timetable/{userId} {
      allow read, write: if isSignedIn() && isOwner(userId);
    }
    
    match /announcements/{document=**} {
      allow read: if true;
    }

    match /schedules/{document=**} {
      allow read: if true;
    }

    match /classes/{document=**} {
      allow read: if true;
    }

    match /courses/{document=**} {
      allow read: if true;
    }

    match /calendar/{document=**} {
      allow read: if true;
    }

    match /system/{docId} {
      allow read: if true;
    }

    // Allow students to access their own data
    match /students/{studentId} {
      allow read, write: if request.auth != null && request.auth.uid == studentId;
      allow delete: if isAdmin();
    }
  }
} 